<launch>
  <rosparam command="load" file="$(find abb_irb140_support)/config/parameters.yaml" />

  <!-- Define the arguments and set their default values -->
  <!-- <arg name="param_height" default="0.32" />
  <arg name="param_width" default="0.28" />
  <arg name="param_length" default="0.25" />
  <arg name="param_center" default="0.5" />
  <arg name="param_value" default="$(eval 0.5 * arg('param_height'))" /> -->

  <!-- Set the parameters on the parameter server -->
  <!-- <param name="param_height" value="$(arg param_height)" />
  <param name="param_width" value="$(arg param_width)" />
  <param name="param_length" value="$(arg param_length)" />
  <param name="param_center" value="$(arg param_center)" />
  <param name="param_value" value="$(arg param_value)" /> -->


  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
 
  <!-- Non-standard joint names:
       - Create a file [robot_moveit_config]/config/joint_names.yaml
           controller_joint_names: [joint_1, joint_2, ... joint_N] 
       - Update with joint names for your robot (in order expected by rbt controller)
       - and uncomment the following line: -->
  <rosparam command="load" file="$(find abb_irb140_support)/config/joint_names_irb140.yaml" />
 
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip argument is required -->
  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" />

  <!-- <arg name="sim" default="false" />
  <arg name="robot_ip" unless="$(arg sim)" default="192.168.125.1" /> -->

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find abb_irb140_moveit_config)/default_warehouse_mongo_db" />

  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find abb_irb140_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- run the robot simulator and action interface nodes -->
  <!-- <group if="$(arg sim)">
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group> -->

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group unless="$(arg sim)">
    <include file="$(find abb_irb140_support)/launch/robot_interface_download_irb140.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>
  </group>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find abb_irb140_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find abb_irb140_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

    <!-- Load the urdf into the parameter server. -->
  <param name="my_robot_description" textfile="$(find abb_irb140_support)/urdf/irb140.urdf"/>

    <!-- Load the URDF file with the specified arguments -->
  <!-- <param name="my_robot_description" textfile="$(find abb_irb140_support)/urdf/irb140.urdf">
    <param name="height" value="$(arg param_height)" />
    <param name="width" value="$(arg param_width)" />
    <param name="length" value="$(arg param_length)" />
    <param name="center" value="$(arg param_center)" />
    <param name="value" value="$(arg param_value)" />
  </param> -->
  
  <!-- <param name="my_robot_description" textfile="$(find abb_irb140_support)/urdf/object_to_scan.urdf"/> -->

    <!-- Load the object_to_scan.urdf -->
  <!-- <param name="object_urdf" command="$(find xacro)/xacro.py $(find abb_irb140_support)/urdf/object_to_scan.urdf" /> -->


  <!-- <rosparam command="load" file="$(find abb_irb140_support)/urdf/object_to_scan.urdf" param="object_urdf"/> -->

  <!-- Load the irb140.urdf -->
  <!-- <rosparam command="load" file="$(find abb_irb140_support)/urdf/irb140.urdf" param="robot_urdf"/> -->

  <!-- Set the robot_description parameter using textfile -->
  <!-- <param name="robot_description" textfile="$(find abb_irb140_support)/urdf/urdf_combiner.xacro" /> -->


  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> -->
  
  <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher2" >
    <remap from="robot_description" to="my_robot_description" />
    <remap from="joint_states" to="different_joint_states" />
  </node> -->
  
  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find abb_irb140_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
