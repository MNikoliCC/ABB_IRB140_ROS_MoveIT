// Generated by gencpp from file planning/CameraMsg.msg
// DO NOT EDIT!


#ifndef PLANNING_MESSAGE_CAMERAMSG_H
#define PLANNING_MESSAGE_CAMERAMSG_H

#include <ros/service_traits.h>


#include <planning/CameraMsgRequest.h>
#include <planning/CameraMsgResponse.h>


namespace planning
{

struct CameraMsg
{

typedef CameraMsgRequest Request;
typedef CameraMsgResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CameraMsg
} // namespace planning


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::planning::CameraMsg > {
  static const char* value()
  {
    return "e5775eef75e8eba6b10486d9b6b6d54e";
  }

  static const char* value(const ::planning::CameraMsg&) { return value(); }
};

template<>
struct DataType< ::planning::CameraMsg > {
  static const char* value()
  {
    return "planning/CameraMsg";
  }

  static const char* value(const ::planning::CameraMsg&) { return value(); }
};


// service_traits::MD5Sum< ::planning::CameraMsgRequest> should match
// service_traits::MD5Sum< ::planning::CameraMsg >
template<>
struct MD5Sum< ::planning::CameraMsgRequest>
{
  static const char* value()
  {
    return MD5Sum< ::planning::CameraMsg >::value();
  }
  static const char* value(const ::planning::CameraMsgRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::planning::CameraMsgRequest> should match
// service_traits::DataType< ::planning::CameraMsg >
template<>
struct DataType< ::planning::CameraMsgRequest>
{
  static const char* value()
  {
    return DataType< ::planning::CameraMsg >::value();
  }
  static const char* value(const ::planning::CameraMsgRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::planning::CameraMsgResponse> should match
// service_traits::MD5Sum< ::planning::CameraMsg >
template<>
struct MD5Sum< ::planning::CameraMsgResponse>
{
  static const char* value()
  {
    return MD5Sum< ::planning::CameraMsg >::value();
  }
  static const char* value(const ::planning::CameraMsgResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::planning::CameraMsgResponse> should match
// service_traits::DataType< ::planning::CameraMsg >
template<>
struct DataType< ::planning::CameraMsgResponse>
{
  static const char* value()
  {
    return DataType< ::planning::CameraMsg >::value();
  }
  static const char* value(const ::planning::CameraMsgResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PLANNING_MESSAGE_CAMERAMSG_H
